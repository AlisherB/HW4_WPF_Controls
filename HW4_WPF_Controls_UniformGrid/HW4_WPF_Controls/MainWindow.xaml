<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HW4_WPF_Controls"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" x:Class="HW4_WPF_Controls.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="300" MinHeight="400" MinWidth="300" MaxWidth="300" MaxHeight="400" >
    <Window.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FFBEE6FD"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="4" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Themes:ClassicBorderDecorator x:Name="ContentContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Themes:ClassicBorderDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="ContentContainer" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="ContentContainer" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Control.Foreground" TargetName="ContentContainer" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid Background="LightGray">
        <TextBox x:Name="resultTextBox" IsTabStop="True" Width="auto" Foreground="Black" Height="49" FontSize="30" TextAlignment="Right" Margin="3,23,3,0" HorizontalContentAlignment="Right" VerticalAlignment="Top" Text="0"/>
        <UniformGrid x:Name="uniformGrid" Margin="3 72 3 3" Rows="5" Columns="4">
            <Button x:Name="backButton" IsTabStop="False" Style="{DynamicResource ButtonStyle}" Click="BackButton_Click">
                <Image Source="back.png" Width="20" Height="16"/>
            </Button>
            <Button x:Name="cButton" IsTabStop="False" Content="C" Style="{DynamicResource ButtonStyle}" Click="DelButton_Click"/>
            <Button x:Name="oneDivideNumButton" IsTabStop="False" Content="1/x" Style="{DynamicResource ButtonStyle}" Click="OneDivideNumButton_Click"/>
            <Button x:Name="sqrtButton" IsTabStop="False" Content="sqrt" Style="{DynamicResource ButtonStyle}" Click="SqrtButton_Click"/>
            <Button x:Name="button7" IsTabStop="False" Content="7" Style="{DynamicResource ButtonStyle}" Click="Button7_Click"/>
            <Button x:Name="button8" IsTabStop="False" Content="8" Style="{DynamicResource ButtonStyle}" Click="Button8_Click"/>
            <Button x:Name="button9" IsTabStop="False" Content="9" Style="{DynamicResource ButtonStyle}" Click="Button9_Click"/>
            <Button x:Name="divideButton" IsTabStop="False" Content="/" Style="{DynamicResource ButtonStyle}" Click="DivideButton_Click"/>
            <Button x:Name="button4" IsTabStop="False" Content="4" Style="{DynamicResource ButtonStyle}" Click="Button4_Click"/>
            <Button x:Name="button5" IsTabStop="False" Content="5" Style="{DynamicResource ButtonStyle}" Click="Button5_Click"/>
            <Button x:Name="button6" IsTabStop="False" Content="6" Style="{DynamicResource ButtonStyle}" Click="Button6_Click"/>
            <Button x:Name="multiplicationButton" IsTabStop="False" Content="*" Style="{DynamicResource ButtonStyle}" Click="MultiplicationButton_Click"/>
            <Button x:Name="button1" IsTabStop="False" Content="1" Style="{DynamicResource ButtonStyle}" Click="Button1_Click"/>
            <Button x:Name="button2" IsTabStop="False" Content="2" Style="{DynamicResource ButtonStyle}" Click="Button2_Click"/>
            <Button x:Name="button3" IsTabStop="False" Content="3" Style="{DynamicResource ButtonStyle}" Click="Button3_Click"/>
            <Button x:Name="minusButton" IsTabStop="False" Content="-" Style="{DynamicResource ButtonStyle}" Click="MinusButton_Click"/>
            <Button x:Name="dotButton" IsTabStop="False" Content="," Style="{DynamicResource ButtonStyle}"/>
            <Button x:Name="button0" IsTabStop="False" Content="0" Style="{DynamicResource ButtonStyle}" Click="Button0_Click"/>
            <Button x:Name="equalButton" IsTabStop="False" Content="=" Style="{DynamicResource ButtonStyle}" Click="EqualButton_Click"/>
            <Button x:Name="plusButton" IsTabStop="False" Content="+" Style="{DynamicResource ButtonStyle}" Click="PlusButton_Click"/>
        </UniformGrid>
        <ToolBar Height="23" VerticalAlignment="Top" IsTabStop="False">
            <Button Name="backspaceToolBar" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="0" Click="BackspaceToolBar_Click">
                <Image Source="back1.png" Height="22" VerticalAlignment="Center"/>
            </Button>
            <Separator/>
            <Button Name="plusToolBar" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="0" Click="PlusToolBar_Click">
                <Image Source="plus.png" />
            </Button>
            <Separator/>
            <Button Name="minusToolBar" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="0" Click="MinusToolBar_Click">
                <Image Source="minus.png" />
            </Button>
            <Separator/>
            <Button Name="multiplyToolBar" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="0" Click="MultiplyToolBar_Click">
                <Image Source="multiply.png" />
            </Button>
            <Separator/>
            <Button Name="divideToolBar" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="0" Click="DivideToolBar_Click">
                <Image Source="divide.png" />
            </Button>
            <Separator/>
            <Button Name="sqrtToolBar" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="0" Click="SqrtToolBar_Click">
                <Image Source="square-root.png" />
            </Button>
            <Separator/>
            <Button Name="equalToolBar" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="0" Click="EqualToolBar_Click">
                <Image Source="equal.png" />
            </Button>

        </ToolBar>
    </Grid>
</Window>
